{"version":3,"sources":["komponen/Navbar.js","komponen/cry.svg","komponen/sad.svg","komponen/happy.svg","komponen/Summary.js","komponen/Datanegara.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","backgroundColor","title","Navbar","classes","className","AppBar","position","Toolbar","Typography","variant","Summary","useState","data","isLoading","summaryData","setSummaryData","getSummaryData","a","Axios","get","response","console","log","useEffect","moment","lastUpdate","format","style","width","src","sad","alt","confirmed","value","happy","recovered","cry","deaths","DataNegara","props","state","loading","stats","tableRef","React","createRef","this","setState","fetch","then","json","res","catch","error","Fragment","marginLeft","marginRight","columns","field","actions","icon","tooltip","isFreeAction","onClick","current","onQueryChange","options","headerStyle","color","Component","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.465d2059.chunk.js","sourcesContent":["import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root : {\r\n        flexGrow : 1,\r\n        backgroundColor : '#f1f1f1', \r\n    },\r\n    title : {\r\n        flexGrow : 1,\r\n    },\r\n}));\r\n\r\nexport default function Navbar(){\r\n    const classes = useStyles();\r\n    return(\r\n        <div className={classes.root}>\r\n            <AppBar position=\"static\">\r\n                <Toolbar>\r\n                    <Typography variant=\"h4\" className={classes.title}>\r\n                        Data Dunia Statistik Covid-19\r\n                    </Typography>\r\n                </Toolbar>\r\n            </AppBar>\r\n        </div>\r\n    );\r\n}","export default __webpack_public_path__ + \"static/media/cry.4d6cebeb.svg\";","export default __webpack_public_path__ + \"static/media/sad.f335c1cd.svg\";","export default __webpack_public_path__ + \"static/media/happy.4ebc91f7.svg\";","import React, { useState, useEffect } from 'react'\r\nimport Axios from 'axios'\r\nimport moment from 'moment'\r\nimport cry from './cry.svg';\r\nimport sad from './sad.svg';\r\nimport happy from './happy.svg';\r\n\r\nconst Summary = () => {\r\n\tconst [summaryData, setSummaryData] = useState({\r\n\t\tdata: {},\r\n\t\tisLoading: true,\r\n\t})\r\n\r\n\tconst getSummaryData = async () => {\r\n\t\ttry {\r\n\t\t\tsetSummaryData({ ...summaryData, isLoading: true })\r\n\t\t\tconst response = await Axios.get('https://covid19.mathdro.id/api')\r\n\t\t\tsetSummaryData({ data: response.data, isLoading: false })\r\n\t\t} catch (error) {\r\n\t\t\tconsole.log(error.response.data)\r\n\t\t}\r\n\t}\r\n\r\n\tuseEffect(() => {\r\n\t\tgetSummaryData()\r\n\t\t// eslint-disable-next-line\r\n\t}, [])\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<p className='text-muted text-center'>\r\n\t\t\t\tlast update : {!summaryData.isLoading && moment(summaryData.data.lastUpdate).format('DD MMM YYYY HH:mm:ss')}{' '}\r\n\t\t\t</p>\r\n\r\n\t\t\t<div className='row'>\r\n\t\t\t\t<div className='col-sm-4 my-2'>\r\n\t\t\t\t\t<div className='card mx-auto bg-warning' style={{ width: '18rem' }}>\r\n\t\t\t\t\t\t<div className='card-body mx-auto'>\r\n\t\t\t\t\t\t<h5 className='card-title text-dark text-center'>KASUS POSITIF</h5>\r\n\t\t\t\t\t\t\t<img src={sad} alt={\"sad\"} style={{ width: '100px' }}/>\r\n\t\t\t\t\t\t\t{!summaryData.isLoading && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h2 className='card-title text-dark text-center'>{summaryData.data.confirmed.value}</h2>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-sm-4 my-2'>\r\n\t\t\t\t\t<div className='card mx-auto bg-success' style={{ width: '18rem' }}>\r\n\t\t\t\t\t\t<div className='card-body mx-auto'>\r\n\t\t\t\t\t\t\t<h5 className='card-title text-light text-center'>KASUS SEMBUH</h5>\r\n\t\t\t\t\t\t\t<img src={happy} alt={\"happy\"} style={{ width: '100px' }}/>\r\n\t\t\t\t\t\t\t{!summaryData.isLoading && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h2 className='card-title text-light text-center'>{summaryData.data.recovered.value}{' '}</h2>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='col-sm-4 my-2'>\r\n\t\t\t\t\t<div className='card mx-auto bg-danger' style={{ width: '18rem' }}>\r\n\t\t\t\t\t\t<div className='card-body mx-auto'>\r\n\t\t\t\t\t\t\t<h5 className='card-title text-light text-center'>KASUS MENINGGAL</h5>\r\n\t\t\t\t\t\t\t<img src={cry} alt={\"cry\"} style={{ width: '100px' }}/>\r\n\t\t\t\t\t\t\t{!summaryData.isLoading && (\r\n\t\t\t\t\t\t\t\t<>\r\n\t\t\t\t\t\t\t\t\t<h2 className='card-title text-light text-center'>{summaryData.data.deaths.value}{' '}</h2>\r\n\t\t\t\t\t\t\t\t</>\r\n\t\t\t\t\t\t\t)}\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>\r\n\t)\r\n}\r\n\r\nexport default Summary","import React from 'react'\r\nimport MaterialTable from 'material-table'\r\n\r\nclass DataNegara extends React.Component{\r\n\tconstructor(props){\r\n\t\tsuper(props);\r\n\t\tthis.tableRef = React.createRef();\r\n\t}\r\n\tstate = {\r\n\t\tloading: false,\r\n\t\tstats: [],\r\n\t}\r\n\tcomponentDidMount(){\r\n\t\tthis.setState({loading: true})\r\n\t\tfetch('https://corona.lmao.ninja/v3/covid-19/countries')\r\n\t\t.then(response => response.json())\r\n\t\t.then(res => {\r\n\t\t\tthis.setState({ stats: res, loading: false}, () => console.log(res))\r\n\t\t})\r\n\t\t.catch(error => {\r\n\t\t\tconsole.log(error)\r\n\t\t})\t\r\n\t}\r\n\trender(){\r\n\t\treturn(\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<MaterialTable style={{marginLeft: '10px', marginRight: '10px'}}\r\n\t\t\t\ttitle=\"Data Kasus Covid-19 Negara\"\r\n\t\t\t\tcolumns={[\r\n\t\t\t\t\t{title: 'Negara', field: 'country'},\r\n\t\t\t\t\t{title: 'Total Kasus', field: 'cases'},\r\n\t\t\t\t\t{title: 'Total Meninggal', field: 'deaths'},\r\n\t\t\t\t\t{title: 'Total Sembuh', field: 'recovered'},\r\n\t\t\t\t]}\r\n\t\t\t\tdata={this.state.stats}\r\n\t\t\t\tactions={[\r\n\t\t\t\t\t{\r\n\t\t\t\t\t\ticon: 'refresh',\r\n\t\t\t\t\t\ttooltip: 'Refresh',\r\n\t\t\t\t\t\tisFreeAction: 'true',\r\n\t\t\t\t\t\tonClick: () => this.tableRef.current && this.tableRef.current.onQueryChange(),\r\n\t\t\t\t\t},\r\n\t\t\t\t]}\r\n\t\t\t\toptions={{headerStyle: {\r\n\t\t\t\t\tbackgroundColor: '#3f51b5',\r\n\t\t\t\t\tcolor: '#fff'\r\n\t\t\t\t}}\r\n\t\t\t}\r\n\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t}\r\n}\r\nexport default DataNegara;","\nimport './App.css';\nimport Navbar from './komponen/Navbar';\nimport Summary from './komponen/Summary';\nimport DataNegara from './komponen/Datanegara';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Navbar />\n      <br></br>\n      <Summary />\n      <br></br>\n      <DataNegara />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}